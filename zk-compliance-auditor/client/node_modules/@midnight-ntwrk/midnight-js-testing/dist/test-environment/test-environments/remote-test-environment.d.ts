import type { ProofServerContainer } from '../../proof-server-container';
import { MidnightWalletProvider } from '../../wallet';
import type { EnvironmentConfiguration } from '../environment-configuration';
import { TestEnvironment } from '../test-environment';
/**
 * Base class for remote test environments that connect to external network services.
 * Provides functionality for managing walletProviders and a proof server container.
 */
export declare abstract class RemoteTestEnvironment extends TestEnvironment {
    protected proofServerContainer: ProofServerContainer;
    private environmentConfiguration;
    private walletProviders;
    /**
     * Abstract method that must be implemented by subclasses to provide environment configuration.
     * @returns {EnvironmentConfiguration} Configuration object containing service URLs and endpoints
     */
    protected abstract getEnvironmentConfiguration(): EnvironmentConfiguration;
    /**
     * Creates and starts the specified number of wallet providers.
     * @returns {Promise<MidnightWalletProvider[]>} Array of started wallet providers
     */
    startMidnightWalletProviders: (amount?: number, seeds?: string[] | undefined) => Promise<MidnightWalletProvider[]>;
    /**
     * Shuts down the test environment by closing all walletProviders and stopping the proof server.
     */
    shutdown: (saveWalletState?: boolean) => Promise<void>;
    /**
     * Performs a health check for the environment.
     * Checks the health of the node, indexer, and optionally the faucet services.
     * @returns {Promise<void>} A promise that resolves when the health check is complete.
     */
    healthCheck: () => Promise<void>;
    /**
     * Starts the test environment by initializing the proof server and environment configuration.
     * @param {ProofServerContainer} maybeProofServerContainer Optional proof server container to use instead of creating a new one
     * @returns {Promise<EnvironmentConfiguration>} The environment configuration
     */
    start: (maybeProofServerContainer?: ProofServerContainer) => Promise<EnvironmentConfiguration>;
}
//# sourceMappingURL=remote-test-environment.d.ts.map