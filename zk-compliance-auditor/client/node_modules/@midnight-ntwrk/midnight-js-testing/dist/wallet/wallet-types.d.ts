import { type Resource } from '@midnight-ntwrk/wallet';
import { type Wallet } from '@midnight-ntwrk/wallet-api';
/**
 * Represents the serialized state of a wallet that can be saved to and loaded from storage.
 * @property {number} offset - The block height/offset up to which the wallet has been synced
 * @property {string} protocolVersion - Version of the protocol being used
 * @property {string[]} txHistory - Array of serialized transaction history entries
 * @property {string} state - Serialized wallet state data
 * @property {string} networkId - Identifier for the network this wallet state belongs to
 */
export type SerializedWalletState = {
    offset: number;
    protocolVersion: string;
    txHistory: string[];
    state: string;
    networkId: string;
};
/**
 * Represents a transaction output with token type, amount and receiver details.
 * @property {string} type - The type/identifier of the token being transferred
 * @property {bigint} amount - The amount of tokens to transfer
 * @property {string} receiverAddress - The address of the recipient who will receive the tokens
 */
export type TxOutput = {
    type: string;
    amount: bigint;
    receiverAddress: string;
};
/**
 * Represents a wallet that inherits from both Wallet and Resource.
 */
export type MidnightWallet = Wallet & Resource;
//# sourceMappingURL=wallet-types.d.ts.map